"""add user and request id to audit

Revision ID: 20e6a3844d6e
Revises: 7f44bc9ca2de
Create Date: 2025-06-21 14:31:34.822643

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20e6a3844d6e'
down_revision: Union[str, None] = '7f44bc9ca2de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop tables only if they exist (for fresh installs)
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'celery_tasksetmeta' in existing_tables:
        op.drop_table('celery_tasksetmeta')
    
    if 'external_link_results' in existing_tables:
        op.drop_index('ix_external_link_results_audit_id', table_name='external_link_results')
        op.drop_index('ix_external_link_results_id', table_name='external_link_results')
        op.drop_table('external_link_results')
    
    if 'celery_taskmeta' in existing_tables:
        op.drop_table('celery_taskmeta')
    
    # Add new columns to audits table
    op.add_column('audits', sa.Column('user_id', sa.String(), nullable=True))
    op.add_column('audits', sa.Column('user_audit_report_request_id', sa.String(), nullable=True))
    op.create_index(op.f('ix_audits_user_audit_report_request_id'), 'audits', ['user_audit_report_request_id'], unique=False)
    op.create_index(op.f('ix_audits_user_id'), 'audits', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_audits_user_id'), table_name='audits')
    op.drop_index(op.f('ix_audits_user_audit_report_request_id'), table_name='audits')
    op.drop_column('audits', 'user_audit_report_request_id')
    op.drop_column('audits', 'user_id')
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('external_link_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('audit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('target_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('checked_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['audit_id'], ['audits.id'], name='external_link_results_audit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='external_link_results_pkey')
    )
    op.create_index('ix_external_link_results_id', 'external_link_results', ['id'], unique=False)
    op.create_index('ix_external_link_results_audit_id', 'external_link_results', ['audit_id'], unique=False)
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    # ### end Alembic commands ### 